version: '3.9'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
      - ~/postgresql/data:/var/lib/postgresql/data
    networks:
      - cinema

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    container_name: elastic-content
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cinema

  cache:
    image: redis:6.2-alpine
    container_name: redis-content
    volumes:
      - cache:/data
    networks:
      - cinema
  

  etl_service:
      build: ./content-service/etl
      container_name: etl-content
      restart: always
      env_file:
        - .env
      volumes:
          - ./content-service/etl:/opt/app
      depends_on:
        postgres:
          condition: service_healthy
        elastic:
          condition: service_healthy
      networks:
        - cinema

  fastapi:
    build: ./content-service/content_api
    container_name: service-content
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent ${FASTAPI_HOST}:${FASTAPI_PORT} -H 'X-Request-Id: healthcheck' >/dev/null || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy
      cache:
        condition: service_started
    expose:
      - "80"
    networks:
      - cinema


  django:
    container_name: django
    build: ./movie_app
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent ${DJANGO_HOST}:${DJANGO_PORT} >/dev/null || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "8000"
    volumes:
      - ./movie_app/static:/opt/app/static:rw
    networks:
      - cinema

  nginx:
    container_name: nginx
    image: nginx:1.23.2
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/config:/etc/nginx/conf.d:ro
      - ./movie_app/static:/data/static:ro
    depends_on:
      django:
        condition: service_healthy
      fastapi:
        condition: service_healthy
    ports:
      - "80:80"
    networks:
      - cinema

volumes:
  cache:
    driver: local

networks:
  cinema:
    external: true
