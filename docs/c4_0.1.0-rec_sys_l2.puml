@startuml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/v2.5.0/C4_Container.puml

title [Container] Recommendation System

Person(user, "Customer", "A customer of the Online Cinema with personal account")
System_Ext(fe, "FE/BE", "Web application")
System_Boundary(c1, "Recommendation System") {
    Container(recsys, "RecSys App", "Python, FastAPI", "Provides recommendation system functionality via a JSON/HTTPS API")
    Container(content, "Content App", "Python, FastAPI", "Provides online cinema functionality via a JSON/HTTPS API")
    Container(ugc, "UGC App", "Python, FastAPI", "Provides users activity functionality via a JSON/HTTPS API")
    Container(auth, "Auth App", "Python, FlaskAPI", "Provides authorization functionality via a JSON/HTTPS API")
    ContainerDb(recsys_db, "Recommendation System Storages", "Redis, MongoDB", "Stores all information about movies recommendations")
    ContainerDb(content_db, "Movie Storages", "SQL Database, Redis, ElasticSearch", "Stores all information about movies content, searching, etc.")
    ContainerDb(ugc_db, "UGC Storages", "Kafka, ClickHouse, Mongo", "Stores all information about user activity, reviews, etc.")
    ContainerDb(auth_db, "Auth Storages", "SQL Database, Redis", "Stores user registration information, access logs, user roles, etc.")
}

Rel(user, fe, "Uses", "HTTPS")
Rel(fe, recsys, "Makes API calls to", "JSON/HTTPS", "Get recommendations")
Rel_Back(fe, recsys, "Recommended movies profiles", "JSON")

Rel_R(recsys, recsys_db, "Reads from and writes to")
Rel(content, content_db, "Reads from and writes to")
Rel(auth, auth_db, "Reads from and writes to")
Rel(ugc, ugc_db, "Reads from and writes to")

Rel(recsys, ugc, "Get user feedback by user_id", "async, JSON/HTTPS")
Rel(recsys, auth, "Get user info by user_id", "async, JSON/HTTPS")
Rel(recsys, content, "Get movies profiles by content_id", "async, JSON/HTTPS")

Rel_Back(recsys, ugc, "content IDs", "JSON")
Rel_Back(recsys, auth, "User profile", "JSON")
Rel_Back(recsys, content, "Movies profiles", "JSON")

SHOW_FLOATING_LEGEND()

@enduml