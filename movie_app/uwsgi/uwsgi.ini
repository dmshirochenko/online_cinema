[uwsgi]
# Path to the wsgi-file generated by Django
wsgi-file = config/wsgi.py

strict = true  # Prevents server from starting if improperly configured
socket = :8000  # Port on which user requests are received
protocol = http

# Launch a master process for managing child processes
master = true

# Terminate all child processes
no-orphans = true

# Stop the server upon receiving a SIGTERM signal
die-on-term = true

# Lazy initialization of the application
# This allows the server to start faster
# The first request received by the process will be slow
# as the application will be initializing.
lazy-apps = true

# Number of processes created by the master process
# Recommended to set to a number not exceeding available CPU cores
processes = 4

# Number of threads used by each process
# Each user request is processed in a separate thread
# With these settings, the maximum number of simultaneous requests the server can handle is 32
# This number is obtained by multiplying the number of processes by the number of threads
threads = 8

# By default, uWSGI does not initiate GIL, so threads will not work within the application
enable-threads = true

# After how many requests to restart the worker
# This is useful for preventing memory leaks
max-requests = 500

# Forcefully reload the worker if it exceeds a memory consumption threshold
reload-on-rss = 1024

# How long to wait for the worker to process current requests before forcefully reloading
worker-reload-mercy = 60

# After how many seconds to forcefully terminate a user request
harakiri = 60
harakiri-verbose = true

# Remove temporary files and UNIX sockets used by the server
vacuum = true

# Before passing the request to the application
# uWSGI reads its content into memory
post-buffering = 1048576

# Buffer size for reading HTTP headers
buffer-size = 65535
